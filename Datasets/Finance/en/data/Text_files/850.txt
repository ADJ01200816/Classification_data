In the context of an information system design scheme, an individual identified as John Doe, classified as male, holds citizenship in the United States. This individual's monthly earnings amount to $7,500, with a corresponding tax contribution of $1,200. The system architecture includes a module for processing financial data, where specific fields are designated for recording earnings and tax deductions. The source code snippet responsible for handling this data is as follows:

```python
class Employee:
    def __init__(self, first_name, last_name, gender, nationality, monthly_income, tax_paid):
        self.first_name = first_name
        self.last_name = last_name
        self.gender = gender
        self.nationality = nationality
        self.monthly_income = monthly_income
        self.tax_paid = tax_paid

    def display_info(self):
        print(f"Name: {self.first_name} {self.last_name}")
        print(f"Gender: {self.gender}")
        print(f"Nationality: {self.nationality}")
        print(f"Monthly Income: ${self.monthly_income}")
        print(f"Tax Paid: ${self.tax_paid}")

# Example instantiation
employee1 = Employee("John", "Doe", "Male", "USA", 7500, 1200)
employee1.display_info()
```

This code segment defines a class `Employee` with attributes for first name, last name, gender, nationality, monthly income, and tax paid. The `display_info` method is used to output the relevant details. In the provided example, an instance of `Employee` is created with the attributes corresponding to John Doe's data. The system also includes a database schema where tables are structured to store these attributes securely, ensuring that sensitive information such as earnings and tax contributions are encrypted. Access controls are implemented to restrict unauthorized retrieval of this data, with role-based permissions defined for different user types within the organization. Additionally, audit logs are maintained to track any access or modifications to the financial records, ensuring compliance with data protection regulations. The system's backend processes include validation checks to ensure the accuracy and integrity of the input data, with error handling mechanisms in place to manage any discrepancies or anomalies detected during data entry or processing.